{"version":3,"file":"static/js/433.14b4a7d0.chunk.js","mappings":"uNACA,GAAgB,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,iC,qEC4CxG,EAzCuB,WAAO,IAADA,EACzBC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,GAAgBC,EAAAA,EAAAA,UAiBtB,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAWC,EAAQC,KAAKC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACRL,EAAAA,EAAAA,MAACO,EAAAA,EAAI,CAACC,SAnBiB,SAAAC,GAAA,OAAAlB,EAAAA,IAAAmB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGX,OAFlBN,EAAEO,iBACIN,EAAejB,EAAcwB,QAAQC,MAC5C1B,GAAa,GAAMqB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKI,EAAAA,EAAMC,KAAK,gDAAgD,CAACC,MAAMX,IAAe,KAAD,EAAjGC,EAAQE,EAAAS,KACd9B,GAAa,GACRmB,GACDY,MAAMZ,EAASa,KAAKC,SACrBZ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEDrB,GAAa,GACX+B,MAAMV,EAAAa,GAAIf,SAASa,MAAM,yBAAAX,EAAAc,OAAA,GAAAnB,EAAA,oBAGhCoB,MAAA,KAAAC,UAAA,EAIiC7B,SAAA,EACpCL,EAAAA,EAAAA,MAACO,EAAAA,EAAK4B,MAAK,CAACjC,UAAWC,EAAQiC,QAASC,UAAU,QAAOhC,SAAA,EACvDC,EAAAA,EAAAA,KAACC,EAAAA,EAAK+B,MAAK,CAAAjC,SAAC,mBACZC,EAAAA,EAAAA,KAAA,SAAOiC,IAAKzC,EAAe0C,UAAQ,EAACC,KAAK,QAAQC,YAAY,oBAE7D1C,EAAAA,EAAAA,MAAC2C,EAAAA,EAAW,CAAEzC,UAAWC,EAAQyC,QAASC,UAAQ,EAAAxC,SAAA,CACjDT,IAAaU,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAAE5C,UAAWC,EAAQ4C,OAAQN,KAAK,SAAQpC,SAAC,qBAG9DT,IAAaU,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAACE,QAAQ,UAAUP,KAAK,SAAQpC,SAAC,mBAQ3D,C","sources":["webpack://react-the-complete-guide/./src/components/ForgetPassword/ForgetPassword.module.css?4349","components/ForgetPassword/ForgetPassword.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"auth\":\"ForgetPassword_auth__F1G+U\",\"control\":\"ForgetPassword_control__TvPhX\",\"actions\":\"ForgetPassword_actions__NrcAN\"};","import classes from './ForgetPassword.module.css';\r\nimport { Form, Button, ButtonGroup, Card } from 'react-bootstrap';\r\nimport { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nconst ForgetPassword = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const emailInputRef = useRef();\r\n    const forgetPassHandler = async(e) => {\r\n        e.preventDefault();\r\n        const enteredEmail = emailInputRef.current.value;\r\n       setIsLoading(true);\r\n        try {\r\n        const response = await axios.post('http://localhost:4000/password/forgetpassword',{email:enteredEmail});\r\n        setIsLoading(false);\r\n          if(response) {\r\n            alert(response.data.message)\r\n          }\r\n        } catch(err) {\r\n          setIsLoading(false);\r\n            alert(err.response.data);\r\n\r\n          }\r\n    }\r\n    return (\r\n        <Card className={classes.auth}>\r\n        <h2>Forget Password</h2>\r\n    <Form onSubmit={forgetPassHandler}>\r\n  <Form.Group className={classes.control} controlId=\"email\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <input ref={emailInputRef} required type=\"email\" placeholder=\"Enter email\" />\r\n  </Form.Group>\r\n    <ButtonGroup  className={classes.actions} vertical>\r\n    {isLoading && <Button  className={classes.toggle} type=\"button\">\r\n      Sending Request\r\n  </Button>}\r\n    {!isLoading && <Button variant=\"primary\" type=\"submit\">\r\n       Submit\r\n  </Button> }\r\n \r\n  </ButtonGroup>\r\n    </Form>\r\n    </Card> \r\n    )\r\n};\r\n\r\nexport default ForgetPassword;"],"names":["_ref","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","emailInputRef","useRef","_jsxs","Card","className","classes","auth","children","_jsx","Form","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","enteredEmail","response","wrap","_context","prev","next","preventDefault","current","value","axios","post","email","sent","alert","data","message","t0","stop","apply","arguments","Group","control","controlId","Label","ref","required","type","placeholder","ButtonGroup","actions","vertical","Button","toggle","variant"],"sourceRoot":""}